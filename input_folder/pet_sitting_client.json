{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample API for managing petsitting missions, users, and places.",
    "title": "Petsitting API",
    "contact": {},
    "version": "1.0"
  },
  "basePath": "/api",
  "paths": {
    "/api/animals": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "animals"
        ],
        "summary": "Update an animal",
        "parameters": [
          {
            "description": "Updated animal data",
            "name": "animal",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/animal.Animal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/animal.WithOwner"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/animal.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/animal.ErrorResponse"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "animals"
        ],
        "summary": "Create a new animal",
        "parameters": [
          {
            "description": "Animal data",
            "name": "animal",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/animal.Animal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/animal.WithOwner"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/animal.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/animal.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/animals/owner/{ownerId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "animals"
        ],
        "summary": "Get animals by owner ID",
        "parameters": [
          {
            "type": "string",
            "description": "Owner ID",
            "name": "ownerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/animal.WithOwner"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/animal.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/animals/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "animals"
        ],
        "summary": "Get an animal by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Animal ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/animal.WithOwner"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/animal.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "animals"
        ],
        "summary": "Delete an animal by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Animal ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/animal.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "missions"
        ],
        "summary": "Create a new mission",
        "parameters": [
          {
            "description": "Mission data",
            "name": "mission",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/missions.CreateMissionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/missions.MissionWithDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/client/{clientId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "missions"
        ],
        "summary": "Get missions by client ID",
        "parameters": [
          {
            "type": "string",
            "description": "Client ID",
            "name": "clientId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/missions.Mission"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/client/{clientId}/details": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "missions"
        ],
        "summary": "Get missions by client ID",
        "parameters": [
          {
            "type": "string",
            "description": "Client ID",
            "name": "clientId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/missions.MissionWithDetails"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/date-range": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "missions"
        ],
        "summary": "Get missions within a date range",
        "parameters": [
          {
            "type": "string",
            "description": "Start Date in format YYYY-MM-DD",
            "name": "startDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "End Date in format YYYY-MM-DD",
            "name": "endDate",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/missions.MissionWithDetails"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/vet-assistant/{vetAssistantId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "missions"
        ],
        "summary": "Get missions by vet assistant ID",
        "parameters": [
          {
            "type": "string",
            "description": "Vet Assistant ID",
            "name": "vetAssistantId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/missions.MissionWithDetails"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "missions"
        ],
        "summary": "Get a mission by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Mission ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/missions.MissionWithDetails"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/{id}/assign/{vetAssistantId}": {
      "put": {
        "tags": [
          "missions"
        ],
        "summary": "Assign a vet assistant to a mission",
        "parameters": [
          {
            "type": "string",
            "description": "Mission ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Vet Assistant ID",
            "name": "vetAssistantId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/missions.MissionWithDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/{id}/cancel": {
      "put": {
        "tags": [
          "missions"
        ],
        "summary": "Cancel a mission",
        "parameters": [
          {
            "type": "string",
            "description": "Mission ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/missions.MissionWithDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/{id}/complete": {
      "put": {
        "tags": [
          "missions"
        ],
        "summary": "Complete a mission",
        "parameters": [
          {
            "type": "string",
            "description": "Mission ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/missions.MissionWithDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/{id}/confirm": {
      "put": {
        "tags": [
          "missions"
        ],
        "summary": "Confirm a mission",
        "parameters": [
          {
            "type": "string",
            "description": "Mission ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/missions.MissionWithDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/{id}/mark-paid": {
      "put": {
        "tags": [
          "missions"
        ],
        "summary": "Mark a mission as paid",
        "parameters": [
          {
            "type": "string",
            "description": "Mission ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/missions.MissionWithDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/missions/{id}/status": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "missions"
        ],
        "summary": "Update mission status",
        "parameters": [
          {
            "type": "string",
            "description": "Mission ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "New status",
            "name": "status",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/missions.UpdateMissionStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/missions.MissionWithDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/missions.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/pet-services": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet_services"
        ],
        "summary": "Get all pet services",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pet_services.PetService"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet_services"
        ],
        "summary": "Create a new pet service",
        "parameters": [
          {
            "description": "Pet Service data",
            "name": "service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pet_services.PetService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/pet_services.PetService"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/pet-services/animal-type/{animalType}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet_services"
        ],
        "summary": "Get pet services by animal type",
        "parameters": [
          {
            "type": "string",
            "description": "Animal Type",
            "name": "animalType",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pet_services.PetService"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/pet-services/category/{category}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet_services"
        ],
        "summary": "Get pet services by category",
        "parameters": [
          {
            "type": "string",
            "description": "Pet Service Category",
            "name": "category",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pet_services.PetService"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/pet-services/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet_services"
        ],
        "summary": "Get a pet service by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Service ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/pet_services.PetService"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pet_services"
        ],
        "summary": "Update a pet service by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Service ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated pet service data",
            "name": "service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pet_services.PetService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/pet_services.PetService"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "pet_services"
        ],
        "summary": "Delete a pet service by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Service ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/pet_services.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/places/details/{placeId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "places"
        ],
        "summary": "Get place details",
        "parameters": [
          {
            "type": "string",
            "description": "Place ID",
            "name": "placeId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/place.Details"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/place.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/place.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/places/suggestions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "places"
        ],
        "summary": "Get place suggestions",
        "parameters": [
          {
            "type": "string",
            "description": "Search query",
            "name": "query",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/place.Suggestion"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/place.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/place.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users.User"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Create a new user",
        "parameters": [
          {
            "description": "User data",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/users.CreateUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/users.User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/email/{email}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get a user by email",
        "parameters": [
          {
            "type": "string",
            "description": "User email",
            "name": "email",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/users.User"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get the current user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/users.User"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/users.User"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Update a user by ID",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated user data",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/users.UpdateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/users.User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete a user by ID",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/users.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "animal.Animal": {
      "type": "object",
      "properties": {
        "allergies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "behaviorNotes": {
          "type": "string"
        },
        "birthDate": {
          "type": "string"
        },
        "breed": {
          "type": "string"
        },
        "childFriendly": {
          "type": "boolean"
        },
        "energyLevel": {
          "$ref": "#/definitions/animal.EnergyLevel"
        },
        "feedingInstructions": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/animal.Gender"
        },
        "houseTrained": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "lastVetVisit": {
          "type": "string"
        },
        "medicalConditions": {
          "type": "string"
        },
        "medications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "microchipNumber": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "petFriendly": {
          "type": "boolean"
        },
        "photoUrl": {
          "type": "string"
        },
        "size": {
          "$ref": "#/definitions/animal.Size"
        },
        "specialInstructions": {
          "type": "string"
        },
        "specialNeeds": {
          "type": "string"
        },
        "species": {
          "$ref": "#/definitions/animal.Species"
        },
        "vaccinationsUpToDate": {
          "type": "boolean"
        },
        "veterinarianContact": {
          "type": "string"
        },
        "weight": {
          "type": "number"
        }
      }
    },
    "animal.EnergyLevel": {
      "type": "string",
      "enum": [
        "LOW",
        "NORMAL",
        "HIGH"
      ],
      "x-enum-varnames": [
        "Low",
        "Normal",
        "High"
      ]
    },
    "animal.ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "animal.Gender": {
      "type": "string",
      "enum": [
        "MALE",
        "FEMALE"
      ],
      "x-enum-varnames": [
        "Male",
        "Female"
      ]
    },
    "animal.Size": {
      "type": "string",
      "enum": [
        "SMALL",
        "MEDIUM",
        "LARGE"
      ],
      "x-enum-varnames": [
        "Small",
        "Medium",
        "Large"
      ]
    },
    "animal.Species": {
      "type": "string",
      "enum": [
        "DOG",
        "CAT",
        "BIRD",
        "FISH",
        "REPTILE",
        "RODENT",
        "RABBIT",
        "FERRET",
        "HORSE",
        "COW",
        "PIG",
        "SHEEP",
        "GOAT",
        "POULTRY",
        "OTHER"
      ],
      "x-enum-varnames": [
        "Dog",
        "Cat",
        "Bird",
        "Fish",
        "Reptile",
        "Rodent",
        "Rabbit",
        "Ferret",
        "Horse",
        "Cow",
        "Pig",
        "Sheep",
        "Goat",
        "Poultry",
        "Other"
      ]
    },
    "animal.WithOwner": {
      "type": "object",
      "properties": {
        "allergies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "behaviorNotes": {
          "type": "string"
        },
        "birthDate": {
          "type": "string"
        },
        "breed": {
          "type": "string"
        },
        "childFriendly": {
          "type": "boolean"
        },
        "energyLevel": {
          "$ref": "#/definitions/animal.EnergyLevel"
        },
        "feedingInstructions": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/animal.Gender"
        },
        "houseTrained": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "lastVetVisit": {
          "type": "string"
        },
        "medicalConditions": {
          "type": "string"
        },
        "medications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "microchipNumber": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/users.User"
        },
        "petFriendly": {
          "type": "boolean"
        },
        "photoUrl": {
          "type": "string"
        },
        "size": {
          "$ref": "#/definitions/animal.Size"
        },
        "specialInstructions": {
          "type": "string"
        },
        "specialNeeds": {
          "type": "string"
        },
        "species": {
          "$ref": "#/definitions/animal.Species"
        },
        "vaccinationsUpToDate": {
          "type": "boolean"
        },
        "veterinarianContact": {
          "type": "string"
        },
        "weight": {
          "type": "number"
        }
      }
    },
    "missions.AnimalService": {
      "type": "object",
      "properties": {
        "animalId": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "petServiceId": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "missions.AnimalServiceWithDetails": {
      "type": "object",
      "properties": {
        "animal": {
          "$ref": "#/definitions/animal.WithOwner"
        },
        "date": {
          "type": "string"
        },
        "petService": {
          "$ref": "#/definitions/pet_services.PetService"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "missions.CreateMissionRequest": {
      "type": "object",
      "required": [
        "clientId",
        "dailyServices",
        "endDate",
        "location",
        "startDate"
      ],
      "properties": {
        "clientId": {
          "type": "string"
        },
        "dailyServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/missions.DailyService"
          }
        },
        "endDate": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/place.Details"
        },
        "notes": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        }
      }
    },
    "missions.DailyService": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/missions.AnimalService"
          }
        }
      }
    },
    "missions.DailyServiceWithDetails": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/missions.AnimalServiceWithDetails"
          }
        }
      }
    },
    "missions.ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "missions.Mission": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "dailyServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/missions.DailyService"
          }
        },
        "endDate": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/place.Details"
        },
        "notes": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/missions.Status"
        },
        "vetAssistantId": {
          "type": "string"
        }
      }
    },
    "missions.MissionWithDetails": {
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/definitions/users.User"
        },
        "dailyServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/missions.DailyServiceWithDetails"
          }
        },
        "endDate": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/place.Details"
        },
        "notes": {
          "type": "string"
        },
        "startDate": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/missions.Status"
        },
        "vetAssistant": {
          "$ref": "#/definitions/users.User"
        }
      }
    },
    "missions.Status": {
      "type": "string",
      "enum": [
        "PENDING",
        "CONFIRMED",
        "IN_PROGRESS",
        "COMPLETED",
        "PAID",
        "CANCELLED"
      ],
      "x-enum-varnames": [
        "StatusPending",
        "StatusConfirmed",
        "StatusInProgress",
        "StatusCompleted",
        "StatusPaid",
        "StatusCancelled"
      ]
    },
    "missions.UpdateMissionStatusRequest": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/missions.Status"
        }
      }
    },
    "pet_services.AnimalType": {
      "type": "string",
      "enum": [
        "DOG",
        "CAT",
        "BIRD",
        "REPTILE",
        "SMALL_MAMMAL",
        "EXOTIC",
        "FISH"
      ],
      "x-enum-varnames": [
        "Dog",
        "Cat",
        "Bird",
        "Reptile",
        "SmallMammal",
        "Exotic",
        "Fish"
      ]
    },
    "pet_services.Category": {
      "type": "string",
      "enum": [
        "BASIC_CARE",
        "MEDICAL",
        "TRAINING",
        "TRANSPORT",
        "SPECIALIZED",
        "HOUSE_CARE"
      ],
      "x-enum-varnames": [
        "BasicCare",
        "Medical",
        "Training",
        "Transport",
        "Specialized",
        "HouseCare"
      ]
    },
    "pet_services.ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "pet_services.PetService": {
      "type": "object",
      "properties": {
        "animalTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pet_services.AnimalType"
          }
        },
        "basePrice": {
          "type": "number"
        },
        "category": {
          "$ref": "#/definitions/pet_services.Category"
        },
        "description": {
          "type": "string"
        },
        "durationMinutes": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "includedItems": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isCustomDurationAllowed": {
          "type": "boolean"
        },
        "isCustomPriceAllowed": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "place.Details": {
      "type": "object",
      "properties": {
        "formattedAddress": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "place.ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "place.Suggestion": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "placeId": {
          "type": "string"
        }
      }
    },
    "users.CreateUserRequest": {
      "type": "object",
      "required": [
        "address",
        "email",
        "firebaseUid",
        "firstname",
        "lastname",
        "phone",
        "role"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/place.Details"
        },
        "creationDate": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emergencyContact": {
          "type": "string"
        },
        "firebaseUid": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "photoURL": {
          "type": "string"
        },
        "preferredCommunicationMethod": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/users.UserRole"
        }
      }
    },
    "users.ErrorResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "users.UpdateUserRequest": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/place.Details"
        },
        "email": {
          "type": "string"
        },
        "emergencyContact": {
          "type": "string"
        },
        "firebaseUid": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "photoURL": {
          "type": "string"
        },
        "preferredCommunicationMethod": {
          "type": "string"
        },
        "updateDate": {
          "type": "string"
        }
      }
    },
    "users.User": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/place.Details"
        },
        "email": {
          "type": "string"
        },
        "emergencyContact": {
          "type": "string"
        },
        "firebaseId": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isVerified": {
          "type": "boolean"
        },
        "lastname": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "photoUrl": {
          "type": "string"
        },
        "preferredCommunicationMethod": {
          "type": "string"
        },
        "registrationDate": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/users.UserRole"
        }
      }
    },
    "users.UserRole": {
      "type": "string",
      "enum": [
        "CLIENT",
        "VET_ASSISTANT"
      ],
      "x-enum-varnames": [
        "RoleClient",
        "RoleAdmin"
      ]
    }
  }
}